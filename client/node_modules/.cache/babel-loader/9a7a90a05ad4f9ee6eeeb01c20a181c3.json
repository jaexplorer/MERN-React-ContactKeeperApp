{"ast":null,"code":"import _slicedToArray from \"/Users/AndrewSabato/Desktop/2019 S2 Web Dev/7. React/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/AndrewSabato/Desktop/2019 S2 Web Dev/7. React/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ContactContext from \"./ContactContext\";\nimport ContactReducer from \"./ContactReducer\";\nimport { GET_CONTACTS, CLEAR_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const _useReducer = useReducer(ContactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Get Contacts\n\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/contacts\");\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/contacts\", contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Clear Contacts\n\n\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      addContact,\n      deleteContact,\n      current: state.current,\n      setCurrent,\n      updateContact,\n      clearCurrent,\n      filtered: state.filtered,\n      filterContacts,\n      clearFilter,\n      error: state.error,\n      getContacts,\n      clearContacts\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/AndrewSabato/Desktop/2019 S2 Web Dev/7. React/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","ContactReducer","GET_CONTACTS","CLEAR_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","err","response","msg","addContact","contact","config","headers","post","deleteContact","id","clearContacts","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ContactContext from \"./ContactContext\";\nimport ContactReducer from \"./ContactReducer\";\nimport {\n  GET_CONTACTS,\n  CLEAR_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR\n} from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n  // Get Contacts\n  const getContacts = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/contacts\");\n      dispatch({ type: GET_CONTACTS, payload: res.data });\n    } catch (err) {\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\n    }\n  };\n\n  // Add Contact\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\n        \"http://localhost:5000/api/contacts\",\n        contact,\n        config\n      );\n      dispatch({ type: ADD_CONTACT, payload: res.data });\n    } catch (err) {\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\n    }\n  };\n\n  // Delete Contact\n  const deleteContact = id => {\n    dispatch({ type: DELETE_CONTACT, payload: id });\n  };\n\n  // Clear Contacts\n  const clearContacts = () => {\n    dispatch({ type: CLEAR_CONTACTS });\n  };\n\n  // Set Current Contact\n  const setCurrent = contact => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  // Clear Current Contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Update Contact\n  const updateContact = contact => {\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\n  };\n\n  // Filter Contacts\n  const filterContacts = text => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        addContact,\n        deleteContact,\n        current: state.current,\n        setCurrent,\n        updateContact,\n        clearCurrent,\n        filtered: state.filtered,\n        filterContacts,\n        clearFilter,\n        error: state.error,\n        getContacts,\n        clearContacts\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}